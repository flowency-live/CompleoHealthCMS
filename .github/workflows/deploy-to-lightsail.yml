name: Deploy to AWS Lightsail

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Deploy to Lightsail
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{ secrets.LIGHTSAIL_USERNAME }}
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        port: 22
        script: |
          # Navigate to CMS directory
          cd /home/ubuntu/cms
          
          # Pull latest code (if using git)
          if [ -d ".git" ]; then
            git pull origin main
          else
            # First time setup - clone the repository
            cd /home/ubuntu
            rm -rf cms
            git clone https://${{ secrets.GITHUB_TOKEN }}@github.com/flowency-live/CompleoHealthCMS.git cms
            cd cms
          fi
          
          # Install dependencies
          npm install
          
          # Create .env file if it doesn't exist
          if [ ! -f .env ]; then
            echo "Creating .env file..."
            echo "NODE_ENV=production" > .env
            echo "HOST=0.0.0.0" >> .env
            echo "PORT=1337" >> .env
            echo "APP_KEYS=${{ secrets.STRAPI_APP_KEYS }}" >> .env
            echo "API_TOKEN_SALT=${{ secrets.STRAPI_API_TOKEN_SALT }}" >> .env
            echo "ADMIN_JWT_SECRET=${{ secrets.STRAPI_ADMIN_JWT_SECRET }}" >> .env
            echo "TRANSFER_TOKEN_SALT=${{ secrets.STRAPI_TRANSFER_TOKEN_SALT }}" >> .env
            echo "JWT_SECRET=${{ secrets.STRAPI_JWT_SECRET }}" >> .env
            echo "" >> .env
            echo "DATABASE_CLIENT=postgres" >> .env
            echo "DATABASE_HOST=localhost" >> .env
            echo "DATABASE_PORT=5432" >> .env
            echo "DATABASE_NAME=strapidb" >> .env
            echo "DATABASE_USERNAME=strapiuser" >> .env
            echo "DATABASE_PASSWORD=CompleoHealth2024" >> .env
            echo "DATABASE_SSL=false" >> .env
          fi
          
          # Build Strapi
          npm run build
          
          # Restart with PM2 (specify working directory)
          pm2 delete strapi-cms 2>/dev/null || true
          cd /home/ubuntu/cms
          pm2 start npm --name "strapi-cms" --cwd /home/ubuntu/cms -- start
          pm2 save
          
          # Show status
          pm2 status